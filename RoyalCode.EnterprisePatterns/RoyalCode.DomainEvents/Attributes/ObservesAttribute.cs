
namespace RoyalCode.DomainEvents.Attributes;

/// <summary>
/// <para>
///     Attribute for use in methods that observes events.
/// </para>
/// <para>
///     Declares the event observer method and the handling context,
///     which are in the same transaction or in a new transaction.
/// </para>
/// <para>
///     Another component will notify the method when some event happens.
/// </para>
/// </summary>
[AttributeUsage(AttributeTargets.Method)]
public class ObservesAttribute : Attribute
{
    /// <summary>
    /// Creates a new attribute.
    /// </summary>
    /// <param name="handlingContext">The event handling context.</param>
    public ObservesAttribute(EventHandlingContext handlingContext = EventHandlingContext.InNewTransaction)
    {
        HandlingContext = handlingContext;
    }

    /// <summary>
    /// <para>
    ///     The event handling context.
    /// </para>
    /// <para>
    ///     This is an informative property.
    /// </para>
    /// <para>
    ///     It is stated whether the event should be executed in the same transaction 
    ///     of the entities that generated the event or if it should be executed in a new transaction.
    /// </para>
    /// <para>
    ///     When the event is generated in the same application or service and 
    ///     is wished to execute the observation in a new transaction, 
    ///     it is understood that the transaction with the entities that generated the event was successfully commited.
    /// </para>
    /// <para>
    ///     In case it is an event generated by another application or service, it cannot be in the same transaction.
    /// </para>
    /// </summary>
    public EventHandlingContext HandlingContext { get; }

}
